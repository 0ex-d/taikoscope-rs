[workspace]
members = [
    "bin/api-server",
    "bin/generate-openapi-spec",
    "bin/taikoscope",
    "crates/*",
]
resolver = "2"

# Optimize dependency resolution and compilation
[workspace.metadata.cargo-machete]
# Configuration for cargo-machete (unused dependency detection)
ignored = []

# Build optimization settings
[workspace.metadata.docs.rs]
# Enable all features for docs.rs builds
all-features = true
# Use stable Rust for docs
rustdoc-args = ["--cfg", "docsrs"]

[workspace.package]
version = "0.1.0"
edition = "2024"
license = "MIT"
exclude = [".github/"]
repository = "https://github.com/chainbound/taikoscope"

[workspace.dependencies]
# Alloy dependencies - optimize features for faster compilation while preserving functionality
alloy = { version = "1.0.24", features = ["provider-ws", "contract", "rpc-types", "sol-types", "reqwest"] }
alloy-contract = { version = "1.0.24" }
alloy-json-rpc = { version = "1.0.24" }
alloy-rpc-client = { version = "1.0.24" }
alloy-rpc-types-eth = { version = "1.0.24" }
alloy-primitives = { version = "1.3.0", features = ["serde"] }
alloy-consensus = { version = "1.0.24" }
alloy-network-primitives = { version = "1.0.24" }
alloy-sol-types = { version = "1.3.0" }
alloy-sol-macro = { version = "1.3.0" }
async-trait = "0.1"
async-stream = "0.3"
# Core web and async dependencies
axum = { version = "0.7.9", features = ["json", "tokio", "http1", "http2"] }
bincode = { version = "1.3" }
chrono = { version = "0.4.41", features = ["serde", "clock"] }
clap = { version = "4.5.43", features = ["derive", "env", "std"] }
clickhouse = { version = "0.13.3", features = ["native-tls", "test-util"], default-features = false }
derive_more = { version = "1.0.0", features = ["debug", "deref"], default-features = false }
dotenvy = { version = "0.15.7", default-features = false }
eyre = { version = "0.6.12", default-features = false, features = ["auto-install"] }
futures = { version = "0.3", default-features = false, features = ["std"] }
hex = { version = "0.4", default-features = false, features = ["std"] }
http = { version = "1", default-features = false }
mockito = { version = "1.7.0", default-features = false }
reqwest = { version = "0.12", features = ["json"] }
serde = { version = "1.0.219", features = ["derive"], default-features = false }
serde_json = { version = "1.0.142", default-features = false, features = ["std"] }
tokio = { version = "1.47.1", features = ["macros", "rt-multi-thread", "sync"], default-features = false }
# Additional async and utility dependencies
tokio-retry = { version = "0.3.0", default-features = false }
tokio-stream = { version = "0.1.17", default-features = false }
tokio-tungstenite = { version = "0.26", default-features = false }
tracing = { version = "0.1.41", default-features = false, features = ["std"] }
tracing-subscriber = { version = "0.3.19", features = ["env-filter", "fmt"], default-features = false }
url = { version = "2.5.4", features = ["serde"], default-features = false }
tower-http = { version = "0.5.2", features = ["cors", "trace"], default-features = false }
tower = { version = "0.5.2", features = ["limit"], default-features = false }
dashmap = { version = "6.1", default-features = false }
utoipa = { version = "5.4", features = ["axum_extras"], default-features = false }
utoipa-swagger-ui = { version = "8.1", features = ["axum", "vendored"], default-features = false }

[workspace.lints]
rust.missing_debug_implementations = "warn"
rust.missing_docs = "warn"
rust.rust_2018_idioms = { level = "deny", priority = -1 }
rust.unreachable_pub = "warn"
rust.unused_must_use = "deny"
rustdoc.all = "warn"

[workspace.lints.clippy]
# These are some of clippy's nursery (i.e., experimental) lints that we like.
# By default, nursery lints are allowed. Some of the lints below have made good
# suggestions which we fixed. The others didn't have any findings, so we can
# assume they don't have that many false positives. Let's enable them to
# prevent future problems.
as_ptr_cast_mut = "warn"
borrow_as_ptr = "warn"
branches_sharing_code = "warn"
checked_conversions = "warn"
clear_with_drain = "warn"
clone_on_ref_ptr = "warn"
cloned_instead_of_copied = "warn"
cognitive_complexity = "warn"
collection_is_never_read = "warn"
dbg_macro = "warn"
debug_assert_with_mut_call = "warn"
derive_partial_eq_without_eq = "warn"
doc_markdown = "warn"
empty_line_after_doc_comments = "warn"
empty_line_after_outer_attr = "warn"
enum_glob_use = "warn"
equatable_if_let = "warn"
explicit_into_iter_loop = "warn"
explicit_iter_loop = "warn"
fallible_impl_from = "warn"
flat_map_option = "warn"
from_iter_instead_of_collect = "warn"
if_not_else = "warn"
if_then_some_else_none = "warn"
implicit_clone = "warn"
imprecise_flops = "warn"
iter_on_empty_collections = "warn"
iter_on_single_items = "warn"
iter_with_drain = "warn"
iter_without_into_iter = "warn"
large_stack_frames = "warn"
large_types_passed_by_value = "warn"
manual_assert = "warn"
manual_clamp = "warn"
manual_is_variant_and = "warn"
manual_string_new = "warn"
map_with_unused_argument_over_ranges = "warn"
match_same_arms = "warn"
missing_const_for_fn = "warn"
mutex_integer = "warn"
naive_bytecount = "warn"
needless_bitwise_bool = "warn"
needless_collect = "warn"
needless_continue = "warn"
needless_for_each = "warn"
needless_pass_by_ref_mut = "warn"
non_std_lazy_statics = "warn"
non_send_fields_in_send_ty = "warn"
nonstandard_macro_braces = "warn"
option_as_ref_cloned = "warn"
path_buf_push_overwrite = "warn"
read_zero_byte_vec = "warn"
redundant_clone = "warn"
redundant_else = "warn"
redundant_pub_crate = "warn"
return_and_then = "warn"
significant_drop_in_scrutinee = "warn"
single_char_pattern = "warn"
string_lit_as_bytes = "warn"
string_lit_chars_any = "warn"
str_to_string = "warn"
suboptimal_flops = "warn"
suspicious_operation_groupings = "warn"
trailing_empty_array = "warn"
trait_duplication_in_bounds = "warn"
transmute_undefined_repr = "warn"
trivial_regex = "warn"
trivially_copy_pass_by_ref = "warn"
tuple_array_conversions = "warn"
type_repetition_in_bounds = "warn"
unnecessary_literal_bound = "warn"
uninhabited_references = "warn"
unnecessary_self_imports = "warn"
unnecessary_semicolon = "warn"
unnecessary_struct_initialization = "warn"
unnested_or_patterns = "warn"
unused_peekable = "warn"
unused_rounding = "warn"
use_self = "warn"
useless_let_if_seq = "warn"
while_float = "warn"
zero_sized_map_values = "warn"

# These are nursery lints which have findings. Allow them for now. Some are not
# quite mature enough for use in our codebase and some we don't really want.
# Explicitly listing should make it easier to fix in the future.
future_not_send = "allow"
significant_drop_tightening = "allow"

[profile.dev-fast]
inherits = "dev"
incremental = true
opt-level = 0
debug = 1
codegen-units = 256
# Optimize dependencies but not workspace crates for faster incremental builds
[profile.dev-fast.package."*"]
opt-level = 1
debug = false

[profile.ci]
inherits = "dev"
incremental = false  # CI doesn't benefit from incremental compilation
opt-level = 1
debug = 1
codegen-units = 16
lto = "thin"
# Optimize dependencies for better CI performance
[profile.ci.package."*"]
opt-level = 2
debug = false
